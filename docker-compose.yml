version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - my-network

  infnetpb:
    image: rafaelloureioc/infnetpb:28.0
    container_name: infnetpb
    ports:
      - "8080:8080"
    networks:
      - my-network
    depends_on:
      - rabbitmq
      - notifications

  notifications:
    image: rafaelloureioc/notificationpb:8.0
    container_name: notifications
    ports:
      - "8081:8081"
    networks:
      - my-network

  graylog:
    image: graylog/graylog:4.2
    container_name: graylog
    environment:
      - GRAYLOG_HTTP_EXTERNAL_URI=http://localhost:9000/
      - GRAYLOG_PASSWORD_SECRET=KQjC^Fn^d3k^9eG)CS3PCk$3AT$W6cp6mqE#+NMqefcyYSkS#mNp+)j5ktZ3Yc$3
      - GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
      - GRAYLOG_HTTP_ENABLE_CORS=true
      - GRAYLOG_HTTP_CORS_ALLOW_ORIGIN=*
      - GRAYLOG_ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "9000:9000"
      - "12201:12201"
      - "12201:12201/udp"
    networks:
      - my-network
    depends_on:
      - mongo
      - elasticsearch

  mongo:
    image: mongo:4.2
    container_name: mongo
    networks:
      - my-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    networks:
      - my-network

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "3000:80"
    networks:
      - my-network

networks:
  my-network:
    driver: bridge
