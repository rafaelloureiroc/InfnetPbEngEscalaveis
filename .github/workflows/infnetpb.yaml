name: Build and Deploy infnetpb

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven


      - name: Grant execute permission for Maven Wrapper
        run: chmod +x ./mvnw

      - name: Build with Maven
        run: ./mvnw clean package -DskipTests

      - name: Build Docker image
        run: docker build -t infnetpb:latest .

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Set up Minikube
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          minikube start --driver=docker

      - name: Set kubectl context
        run: |
          kubectl config use-context minikube

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f Kubernetes/infnetpb-deployment.yaml
          kubectl get deployments
          kubectl get services

      - name: Wait for Service to be Available
        run: sleep 30

      - name: Get Service URL
        run: |
            SERVICE_URL=$(minikube service infnetpb-service --url)
            echo "Service URL: $SERVICE_URL"

      - name: Port Forward
        run: |
            kubectl port-forward svc/infnetpb-service 8080:8080 &
            sleep 10

      - name: Test Service (POST)
        run: |
          curl -X POST http://localhost:8080/restaurantes \-H "Content-Type: application/json" \-d '{"nome": "Restaurante Da carminea","cep": 24355210}'
           sleep 5
      - name: Test Service(GET)
        run: |
          curl http://localhost:8080/restaurantes
